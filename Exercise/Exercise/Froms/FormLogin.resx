<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUoAAAA8CAYAAAAAJfNtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IgAALiIBquLdkgAAB5FJREFUeF7tnUtvE1cYhr1CqEKsEFVVoapClVBXSBUqqqpW/QuVWLJrpapVEUgV
        K/oX4Ed00e5KIY2dqwORCE68aRyKo5CbEydOY4IDxLmS9H3N8eAz/nIlgDN5X+nhfHPmnANsHo3tmTOx
        jY2NN0K8OX6qK9l1Ld2Xbs9ms+P5yfyzUqm0try0vI7ziqIoewodQpfAKc/pFjqGrqFzcNr00etidu6V
        RDxxrjfVe2tiYuLpixcv0KUoivJ2QufQPXRQa0vreXSZntoLZudu6ezo/Hn40XBBclQUpRFCF9FJyc7k
        JRya3toNZudOwT/ici6XK6FWFEVpyNBRdBVK02M7wezcjnhz/Gz2YXYU9ZYpFosrDwYeZO/33P8jmUxe
        bUm0fIW5H+CUua4QQmwHHUKX0Cl0CxzzkK7BuS1DZ9FdKM11t8Ls3Iruu93XFxcXN/1BZqYws9jX29eE
        /8gXODTXEEKI/YbfS9I9dBCOzdBddBhKc43NMDstmm43Hevv7/8HtZmRkZHZzo7On1Ca84UQ4m1BFw0P
        D/+H2gxdBqcdR2nOD2N2huGl7tjo2GPUdZmeni7jH/U9SnOuEEK8K+gmOgp1XXLjuVLz382nUZpzazE7
        a0nEE2em8lMLqL2srq5upFKpm7DyURyac4UQ4l1DR9FVdFY4hUKhTMehNOdWMTur4Ery1NRUvSTn5uZW
        O9o7LqI05wkhRKNBZ9FdqL3wipOuQ2nOI2Yn4XeSY2Njc6i98AkbXK5+gtKcJ4QQjQrdRYeh9kLX0Xko
        zXlmJ8n0ZzJovYyOjM5isZMozTlCCNHo0GFwWRG1F+c8c47Z6X4+90IL4y84gdKcI4QQBwW6zLqyhPtu
        oKkbX9eRiCc+K5fL3n2SvJlzJ194CiHEQYFOC9+oTveh/xxKb6x3QIaGhvJog6ysrGy0t7VfQFk3Vggh
        DjJ0Gx1XG+dAb5x3kEwmr6D1kkql/kLjjRNCiKiQup/6E60XuPAXNMEYb0Iul5tHG4Q/m+Oz/BGU3jgh
        hIgKdFz4pnTnwmBMUHCrNLRe9MSNEOIw4FznxTmxcj4YyL3b0Abhs9togvNCCBFlws+GOydWzlX+SMQT
        n4Y33YVNf0TjLSSEEFHFOS8InUg3onwpyvCXmYVCgdsU1S0khBBRZmbG36LNufGlKMM/4nBPNzR1iwgh
        RJTpTfXeRhuk+qNOZeOL8MduXG5+jsZcSAghoop7KVkQupGOjN3puvOr66vEXXqaiwghRNQpzvpP69CR
        sXRfus0dVzKQGXiAxlxACCGiDhz4L9og6XS6IzaYHRx3x5X03Ov5DY25gBBCRB2+sAxtEDoylp/MP3fH
        ldTeZCmEEIcN9/hiEDoyViqV1txxJXwNJBpzASGEiDrOgUHm5+fXYstLy96WanyRGBpzASGEiDpw4Pto
        gywtLa3zRDh1E4UQ4pDhpa4DCU8QQohDQ9PLd+cE4dsb9dFbCCFqcC9PDLKwsLBu/ZjzJRpzASGEiDqt
        La1fow3y5MmTVd0eJIQQNZi3B+mGcyGEeIV5w3m6L93ujivRI4xCiMOM+QijNsUQQohXmJtiaJs1IYR4
        iXNfELfN2keVk+GNe93mlXWLCCFElNl0417+oVdBCCHERsy5L4j3Kgi9XEwIcdjZ9uViZPjR8AxPVuNe
        3egtJIQQUcV4XS2dWDkXDHI3mntBH18KHowRQogo4lznxTmxct4bHP5RZ3p6utx0u+kISm+cEEJEBTqO
        rkMdpPojThVvQvjRHab6ZaYQQkSR8I/ZDFx4FU0wxptAhoaG8miDrKysbLS3tV9AWTdWCCEOMm2tbd/S
        cbVxDvTGeQckEU+cK5fL3tZrxWJxBf1nUNaNF0KIgwidRrehDkL30YEovbHeQZXuu9030HrJT+af4bP8
        CZTmHCGEOCjQZXQaai/OfXXj6zqqZPozA2i9jI6MzuIvOInSnCOEEI0OHUaXofbinGfOMTsJFjs2Pj7+
        BLUXWtjtAGzOE0KIRoXusq4kc+O5Ep2H0pxndlbhojOFym5CXubm5lY72jsuojTnCSFEo0FnPX782P/l
        BqHjtrv4Mztr4SM84XuMGL5wJ5VK3YSFj+LQnCuEEO8aOoquorPCoSTpOJTm3CpmZ5h4c/xDfAyfQ10X
        ShSm/g6lOVcIId4VdJN1ocfkcrkSriRPozTn1mJ2WsDKxzP9mX7UZvicZGdH5w8ozflCCPG2oIvCz27X
        Bi7L0GkozflhzM6t6L7bfX1xcdG7z7I2vJTtTfXeam1pPY9Dcw0hhNhv6By6x/pdpRq6iw5Daa6xGWbn
        duCj+NlsNjuKessUZ4vLfP9Ez72e3/l4JP4j3+BS92OY/D2cNtcWQojNoDvoELqETqFb6Bi6Bue3DJw1
        RnehNNfeCrNzpyQ7k5fDG2koiqI0UiZyE/OQ6hWUpsd2gtm5WyDMS9y7bX1900/kiqIoby10EZ1EN+HQ
        9NZuMDv3ivuO4Pbk5OTT8I7piqIobzJ0Dt1DB+33byRm537Atzt2Jbuu8b3hg4ODuXw+/5w3qpcXyutr
        a2sYoiiKsrvQHXQIXUKn0C10DF1D52CI6aPXYyP2P1aSvW/2dDHEAAAAAElFTkSuQmCC
</value>
  </data>
</root>